---
os: linux
dist: bionic

language: rust
jobs:
  include:

    # MANDATORY CHECKS USING CURRENT DEVELOPMENT TOOLCHAIN
    - name: "format Rust source using current development toolchain"
      rust: 1.44.1
      before_script:
        - rustup component add rustfmt
      env: TASK=fmt-travis

    - name: "lint Rust source using current development toolchain"
      rust: 1.44.1
      before_script:
        - rustup component add clippy
        - >
          sudo
          add-apt-repository
          "deb http://us.archive.ubuntu.com/ubuntu/ eoan main"
        - sudo apt-get install libcryptsetup-dev
      env: TASK=clippy

    # MANDATORY TESTING ON STABLE
    - name: "build using stable toolchain"
      rust: stable
      before_script:
        - >
          sudo
          add-apt-repository
          "deb http://us.archive.ubuntu.com/ubuntu/ eoan main"
        - sudo apt-get install libcryptsetup-dev
      env: TASK=build
    - name: "build Rust docs using stable toolchain"
      rust: stable
      before_script:
        - >
          sudo
          add-apt-repository
          "deb http://us.archive.ubuntu.com/ubuntu/ eoan main"
        - sudo apt-get install libcryptsetup-dev
      env: TASK=docs-travis
    - name: "run Rust unit tests using stable tool chain"
      rust: stable
      before_script:
        - >
          sudo
          add-apt-repository
          "deb http://us.archive.ubuntu.com/ubuntu/ eoan main"
        - sudo apt-get install libcryptsetup-dev libkeyutils-dev
      env: TASK=test
    - name: "run Rust loopback unit tests using stable tool chain"
      rust: stable
      before_script:
        - >
          sudo
          add-apt-repository
          "deb http://us.archive.ubuntu.com/ubuntu/ eoan main"
        - sudo apt-get install libcryptsetup-dev libkeyutils-dev
      script:
        - >
          sudo
          TEST_DIR=${TRAVIS_HOME}
          PATH=${TRAVIS_HOME}/.cargo/bin:$PATH
          make
          -f
          Makefile
          test-loopback
    - name: "build release using stable tool chain"
      rust: stable
      before_script:
        - >
          sudo
          add-apt-repository
          "deb http://us.archive.ubuntu.com/ubuntu/ eoan main"
        - sudo apt-get install libcryptsetup-dev
      env: TASK=release

    # INTERMITTENTLY ALLOWED FAILURES
    # Allowed if a failure occurs after a new Rust release until the
    # failure is addressed.
    - name: "Run clippy on beta toolchain"
      rust: beta
      before_script:
        - rustup component add clippy
        - >
          sudo
          add-apt-repository
          "deb http://us.archive.ubuntu.com/ubuntu/ eoan main"
        - sudo apt-get install libcryptsetup-dev
      env: TASK=clippy

    # VERIFICATION OF TEST INFRASTRUCTURE
    - name: "run yamllint 1.23.0 on .travis.yml"
      language: python
      python: "3.7.6"
      install: pip3 install yamllint==1.23.0
      env: TASK=yamllint

branches:
  only:
    - master

script: make -f Makefile $TASK
